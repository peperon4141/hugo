<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>こつこつナレッジ</title><link>https://tech.choihack.com/post/</link><description>Recent content on こつこつナレッジ</description><generator>Hugo -- gohugo.io</generator><copyright>© - 2021 - こつこつナレッジ</copyright><lastBuildDate>Sun, 11 Jul 2021 23:23:10 +0900</lastBuildDate><atom:link href="https://tech.choihack.com/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Vueプロジェクト作成</title><link>https://tech.choihack.com/post/firebase/vue%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E4%BD%9C%E6%88%90/</link><pubDate>Sat, 16 Apr 2022 17:36:40 +0900</pubDate><guid>https://tech.choihack.com/post/firebase/vue%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E4%BD%9C%E6%88%90/</guid><description>プロジェクト作成を楽したい プロジェクトを新規作成する場合に、ゼロから作成するよりも雛形を使いたい。
使用したいモジュールは以下。
Vue.js Webpack Firebase Sass TypeScript vue create コマンド：vue create
自分で選択肢を選ぶながらプロジェクトを作成できる。
最大の問題点は、webpackの設定ファイルがVue用に作成されたもので作られてしまう。
気に食わない。
vue init コマンド：vue init webpack-simple project-name
指定したテンプレートを元にプロジェクトを作成できる。
問題点は、パッケージのバージョンが古すぎる。
ローカルのNode.jsのバージョンとマッチしないと、作成直後でもエラーが発生して動作しない。
このコマンドはもう使えないと思って良いかもしれない。
webpack-cli コマンド：webpack init
webpackのプロジェクトを作成することができる。 問題点は、Vue.jsの設定は自分でしないといけないこと。
結論 webpack-cli を使用するのが一番良さそう。
$ mkdir project-name $ cd project-name $ yarn init -y $ yarn add webpack webpack-cli $ npx webpack init 更に、これでプロジェクトを作成した後に、 firebase init (firebase-toolsが必要)でfirebaseプロジェクトの設定を追加するのが良さそう。
Vue.jsを追加する場合は、以下の記事が参考になりました。
https://ics.media/entry/16329/#webpack-ts-vue
Vue の追加 yarn add -D vue vue-loader @vue/compiler-sfc webpack.config.jsonに以下を追加
const { VueLoaderPlugin } = require('vue-loader') const webpack = require('webpack') webpack.</description></item><item><title>FirebaseでハマったReference、Doc、Snapshot</title><link>https://tech.choihack.com/post/firebase/firebase%E3%81%A7%E3%83%8F%E3%83%9E%E3%81%A3%E3%81%9Freferencedocsnapshot/</link><pubDate>Mon, 07 Mar 2022 08:58:29 +0900</pubDate><guid>https://tech.choihack.com/post/firebase/firebase%E3%81%A7%E3%83%8F%E3%83%9E%E3%81%A3%E3%81%9Freferencedocsnapshot/</guid><description>参考 firestoreのreferenceとかsnapshotで混乱したので整理してみた</description></item><item><title>FirebaseとVue.jsでアプリを作成する</title><link>https://tech.choihack.com/post/firebase/firebase%E3%81%A8vue.js%E3%81%A7%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B/</link><pubDate>Sun, 29 Aug 2021 13:23:07 +0900</pubDate><guid>https://tech.choihack.com/post/firebase/firebase%E3%81%A8vue.js%E3%81%A7%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B/</guid><description>はじめに FirebaseでTODOアプリを作成します。
TODOアプリで一通りのFirebaseの機能を使ってみたいと思います。
今回はFirebaseの中で以下のサービスを利用します。
Authentication Cloud Firestore Hosting Yarn, Vue.js、Vue CLIを使用します。
Vue CLIは以下でグローバルにインストールしておいて下さい。
yarn global add @vue/cli firebaseのCLIは以下のコマンドでグローバルにインストールします。
yarn global add firebase-tools アプリ作成 以下のコマンドでプロジェクトを作成します。
オプションはお好みで選びます。
vue create {プロジェクト名} プロジェクト作成後直後の状態で起動してみましょう！
cd {プロジェクト名} yarn serve http://localhost:8080/ にアクセスすると初期状態のVueプロジェクトが確認できます。
Vue用マテリアルデザインフレームワークとしてVuetifyを追加する。
vue add vuetify 文法チェックをEslintにするのが好みです Component name &amp;quot;Home&amp;quot; hould always be multi-wordのようなエラーが出たらvue/multi-word-component-names': 0を.eslintrc.jsのrulesに追加する。 Firebaseプロジェクトを作成する Firebase にアクセスし、ログインします。 プロジェクトを追加をクリックし、名前を設定して、プロジェクトを作成します。 今回はこのプロジェクトでGoogleアナリティクスを有効にするをオフにしました。
使用する機能を全て有効化しておきます。
Authentication Hosting Cloud Firestore Authenticationは、Googleプロバイダを有効化しておきます。
Cloud Firestoreのロケーションはお好みですが、私はasia-northeast1（東京）にしました。
参考: リージョンとゾーン Firebaseをアプリに統合する firebaseをアプリに追加 yarn add -D firebase src/firebase.</description></item></channel></rss>